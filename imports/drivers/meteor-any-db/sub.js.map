{
  "version": 3,
  "file": "sub.js",
  "sourceRoot": "",
  "sources": [
    "sub.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "{DB_KEY} = AnyDb # Spoofing a Mongo collection name to hack around DDP\n\ndebug = (->)\nif Meteor.settings.public?.log?.sub\n  debug = console.log.bind(console, 'sub')\n\n# find the index of a document with a given id within a collection\nfindDocIdIndex = (id, docs) ->\n  for i in [0...docs.length]\n    if docs[i]._id is id\n      return i\n  return -1\n\n# mutably remove fields that are set to undefined\ndeleteUndefined = (doc) ->\n  for k,v of doc\n    if U.isPlainObject(v)\n      doc[k] = deleteUndefined(v)\n    else if v is undefined\n      delete doc[k]\n  return\n\n# update the document based on the fields\nchangeDoc = (doc, fields) ->\n  deleteUndefined(U.extendDeep(doc, fields))\n  return\n\n# subs[subId] = subObject\nAnyDb.subs = {}\n\nAnyDb.subscribe = (name, query, onReady) ->\n  sub = {name, query}   # name and query are useful here just for debugging\n  sub.data = []         # subscriptions always return collections\n  sub.dataIds = {}      # keep track of which id's belong to this subscription\n  sub.ready = false     # don't fire onChange methods until the subscription is ready\n\n  # onChange listeners\n  sub.listeners = {}\n  sub.onChange = (f) ->\n    id = Random.hexString(10)\n    sub.listeners[id] = f\n    {stop: -> delete sub.listeners[id]}\n  dispatchChange = ->\n    if sub.ready\n      debug('change', sub.subId, 'listeners', Object.keys(sub.listeners).length)\n      for id, f of sub.listeners\n        f(R.clone(sub.data))\n\n  # The following observer methods will be called as DDP messages come in\n  # via Meteor.connection.registerStore\n\n  sub.addedBefore = (id, fields, before) ->\n    doc = fields\n    doc._id = id\n    sub.dataIds[id] = true\n    if before is null\n      sub.data = sub.data.concat(doc)\n    else\n      i = findDocIdIndex(before, sub.data)\n      if i < 0 then throw new Error(\"Expected to find before id, #{before}\")\n      sub.data = R.clone(sub.data)\n      sub.data.splice(i,0,doc)\n    dispatchChange()\n\n  sub.movedBefore = (id, before) ->\n    fromIndex = findDocIdIndex(id, sub.data)\n    if fromIndex < 0 then throw new Error(\"Expected to find id: #{id}\")\n    sub.data = R.clone(sub.data)\n    doc = sub.data[fromIndex]\n    sub.data.splice(fromIndex, 1)\n    if before is null\n      sub.data.push(doc)\n    else\n      toIndex = findDocIdIndex(before, sub.data)\n      if toIndex < 0 then throw new Error(\"Expected to find before _id: #{before}\")\n      sub.data.splice(toIndex, 0, doc)\n    dispatchChange()\n\n  sub.changed = (id, fields) ->\n    sub.data = R.clone(sub.data)\n    i = findDocIdIndex(id, sub.data)\n    if i < 0 then throw new Error(\"Expected to find id: #{id}\")\n    changeDoc(sub.data[i], fields)\n    dispatchChange()\n\n  sub.removed = (id) ->\n    i = findDocIdIndex(id, sub.data)\n    if i < 0 then throw new Error(\"Expected to find id\")\n    [oldDoc] = sub.data.splice(i, 1)\n    delete sub.dataIds[id]\n    dispatchChange()\n\n  lap = U.stopwatch()\n  debug('start', name)\n  # make sure reactive computations dont fuck this up, especially\n  # on hot reloads.\n  handle = Tracker.nonreactive ->\n    Meteor.subscribe name, query,\n      onReady: ->\n        debug('ready', name, sub.subId, lap(), 's')\n        sub.ready = true\n        dispatchChange()\n        onReady?(sub)\n      onStop: (e) ->\n        debug('stopped', name, sub.subId)\n        if e then throw(e)\n\n  sub.subId = handle.subscriptionId\n\n  sub.stop = ->\n    debug('stop', name, sub.subId)\n    sub.listeners = {}\n    handle.stop()\n    sub.data = []\n    sub.dataIds = {}\n    # unregister the subscription\n    delete AnyDb.subs[sub.subId]\n\n  sub.reset = ->\n    debug('reset', name, sub.subId)\n    sub.data = []\n    sub.dataIds = {}\n    # dispatchChange()s\n\n  # register the subscription\n  AnyDb.subs[sub.subId] = sub\n  return sub\n\n# Find a certain document by id, where ever it may be in any subscription.\nAnyDb.findDoc = (id) ->\n  for subId, sub of AnyDb.subs\n    if sub.dataIds[id]\n      i = findDocIdIndex(id, sub.data)\n      return R.clone(sub.data[i])\n  return undefined\n\n# unflatten DDP fields into a deep object\nfields2Obj = (fields={}) ->\n  fields = R.clone(fields)\n  dest = {}\n  for key,value of fields\n    keys = key.split('.').reverse()\n    if keys.length is 1\n      dest[key] = value\n    else\n      obj = {}\n      prevObj = obj\n      while keys.length > 1\n        tmp = {}\n        prevObj[keys.pop()] = tmp\n        prevObj = tmp\n      prevObj[keys.pop()] = value\n      U.extendDeep(dest, obj)\n  return dest\n\n# some weird stuff going on with DDP\nparseId = (id) ->\n  if id is \"\"\n    return id\n  else if id is '-'\n    return undefined\n  else if id.substr(0, 1) is '-'\n    return id.substr(1)\n  else if id.substr(0, 1) is '~'\n    # numbered id's should remain strings!\n    return JSON.parse(id.substr(1)).toString()\n  else\n    return id\n\n# parse the subscription, position, cleared, fields, etc.\nparseDDPMsg = (msg) ->\n  id = parseId(msg.id)\n  msg.fields = fields2Obj(msg.fields)\n  positions = {}\n  cleared = {}\n  subObj = msg.fields[DB_KEY]\n  if subObj\n    for subId, value of subObj\n      if value is undefined\n        cleared[subId] = true\n      else\n        before = value.split('.')[1]\n        if before is \"null\" then before = null\n        positions[subId] = before\n  fields = R.clone(msg.fields)\n  delete fields[DB_KEY]\n  return {id, fields, positions, cleared}\n\nMeteor.connection.registerStore DB_KEY,\n  beginUpdate: (batchSize, reset) ->\n    if reset\n      for subId, sub of AnyDb.subs\n        sub.reset()\n\n  update: (msg) ->\n    {id, fields, positions, cleared} = parseDDPMsg(msg)\n\n    if msg.msg is 'added'\n      for subId, before of positions\n        sub = AnyDb.subs[subId]\n        sub.addedBefore(id, R.clone(fields), before)\n      return\n\n    if msg.msg is 'removed'\n      for subId, sub of AnyDb.subs\n        if sub.dataIds[id] then sub.removed(id)\n      return\n\n    if msg.msg is 'changed'\n      # remove cleared subscriptions which come in as a subId\n      # position set to undefined\n      for subId, value of cleared\n        sub = AnyDb.subs[subId]\n        # the subscription cleans itself up when it stops so it may\n        # not be found\n        sub?.removed(id)\n\n      lookup = R.memoize(AnyDb.findDoc)\n      for subId, before of positions\n        sub = AnyDb.subs[subId]\n        # sub could be null apparently if you logout and back in really quickly\n        if not sub then return\n        if sub.dataIds[id]\n          sub.movedBefore(id, before)\n        else\n          doc = lookup(id)\n          sub.addedBefore(id, R.omit(['_id'], doc), before)\n\n      # the basic field changes\n      if Object.keys(fields).length > 0\n        for subId, sub of AnyDb.subs\n          if sub.dataIds[id] then sub.changed(id, R.clone(fields))\n      return\n\n    throw new Error(\"I don't know how to deal with this message\");\n"
  ]
}